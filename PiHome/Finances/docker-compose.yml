version: "3.3"

#
# The Firefly III Data Importer will ask you for the Firefly III URL and a "Client ID".
# You can generate the Client ID at http://localhost/profile (after registering)
# The Firefly III URL is: http://app:8080
#
# Other URL's will give 500 | Server Error
#

services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly_iii_core
    networks:
      - firefly_iii
    restart: always
    volumes:
      - /home/pi/docker-mounts/firefly-iii/upload:/var/www/html/storage/upload
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      - db
    stdin_open: true # docker run -i
    tty: true # docker run -t

  db:
    container_name: firefly_iii_db
    image: "postgres:10"
    environment:
      - POSTGRES_PASSWORD=secret_firefly_password
      - POSTGRES_USER=firefly
    networks:
      - firefly_iii
    volumes:
      - /home/pi/docker-mounts/firefly-iii/postgresql/data:/var/lib/postgresql/data

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: always
    container_name: firefly_iii_importer
    networks:
      - firefly_iii
    ports:
      - "8180:8080"
    depends_on:
      - app
    env_file: .importer.env

  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    container_name: firefly_iii_cron
    restart: always
    command: sh -c "echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/REPLACEME\" | crontab - && crond -f -L /dev/stdout"
    networks:
      - firefly_iii
volumes:
  firefly_iii_upload:

networks:
  firefly_iii:
    driver: bridge
